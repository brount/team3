<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.medical.persitence.GuestDAO">
	
	<select id="guestLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM guest WHERE guestid=#{id} AND guestpwd=#{pwd}
	</select>


 
  <!-- 중복확인, 정보수정, 회원탈퇴 처리 -->
 	<select id="idCheck" resultType="int">
 		SELECT COUNT(*) FROM guest WHERE guestid=#{strId}
 	</select>

	<!-- 이메일 인증 -->
 	<select id="emailok" resultType="int">
 		SELECT COUNT(*) FROM guest WHERE guestemail=#{email}
 	</select>
	
	<!-- 회원가입 처리 -->
	<insert id="insertGuest" parameterType="com.team.medical.vo.GuestVO">
		INSERT INTO guest(GUESTNO, JUMIN, GUESTID, GUESTPWD, GUESTNAME, GUESTAGE, GUESTTEL, GUESTEMAIL, ADDRESS1, ADDRESS2, ADDRESS3, GUESTDATE, STATUS )
		 VALUES(guest_seq.NEXTVAL, #{jumin},#{guestid},#{guestpwd},#{guestname}, 26, #{guesttel},#{guestemail},#{address1},#{address2},#{address3},#{guestdate}, 0)	
	
	</insert>
	
	<!-- 회원정보조회 -->
	<select id="getGuestInfo" resultType="com.team.medical.vo.GuestVO">
	SELECT * FROM guest WHERE guestid=#{id}
	</select>
	
	<!-- 회원정보 수정처리 -->
	<update id="updateGuest" parameterType="com.team.medical.vo.GuestVO">
	update guest set guestpwd=${guestpwd},  address1=#{address1}, address2=#{address2}, address3=#{address3},
	guesttel=#{guesttel}, guestemail=#{guestemail} where GUESTNO=#{guestNo}  
	</update>
	
	<!-- 회원탈퇴시 비밀번호 체크 -->
	<select id="exitOkPro" resultType="int">
		select count(*) from guest where GUESTID=#{id} and GUESTPWD=#{pwd}
	</select>
	
	<!-- 회원탈퇴 업뎃처리 -->
	<update id="guestExitPro">
		update guest set status=1 where guestNo=#{guestNo}
	</update>
	
	<!-- 내 질문목록 건수 -->
	<select id="myBordListcnt" resultType="int">
	
	 select count(*) from QuestionBoard where boardwriter=#{id}
	</select>
	
	
	<!-- 내 질문목록 -->
	<select id="myBordList" parameterType="map" resultType="com.team.medical.vo.QuestionBoardVO">
	
	<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT boardno, boardwriter, boardpwd, boardtitle, boardcontent,boarddate, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM QuestionBoard 
			   	   	  		  where kind=1 and boardwriter=#{id}
			   	   	  	  ORDER BY boardno DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	
	
	
	
	</select>
	
	
	<!-- 마이헬스 정보 인서트  -->
	<insert id="personalAddPro" parameterType="com.team.medical.vo.MyhealthVO">
	INSERT INTO Myhealth(guestNo, birth1, birth2, birth3, age, height, weight, gender, bloodtype )
		VALUES(#{guestNo}, #{birth1}, #{birth2}, #{birth3}, #{age}, #{height}, #{weight}, #{gender}, #{bloodtype})
	</insert>
	
	<!-- 마이헬스 정보 업데이트 -->
	<update id="personalMofPro" parameterType="com.team.medical.vo.MyhealthVO">
	update Myhealth 
		set birth1=#{birth1} , birth2=#{birth2} , birth3=#{birth3} , age=#{age} , height=#{height} , weight=#{weight} , gender=#{gender} , bloodtype= #{bloodtype} 
		where guestNo=#{guestNo}
	</update>
	
	<!-- 마이헬스 정보 셀렉트  -->
	<select id="myHealth" resultType="com.team.medical.vo.MyhealthVO">
	SELECT * FROM Myhealth WHERE guestNo=#{guestNo}	
	</select>

	<!-- 검진서등록 인설트 -->
	<insert id="checkupRegisterPro" parameterType="com.team.medical.vo.ExaminationVO">
		INSERT INTO Examination(COL,  GUESTNO, HEIGHT,WEIGHT,FATNESS ,VISIONL, VISIONR , HEARINGL , HEARINGR ,BLOODPREMAX ,  BLOODPREMIN             
    ,URINEGLUCOSE, URINEPROTEIN , OCCULTHEMATURIA, URINEPH ,HEMOGLOBIN ,BLOODGLUCOSE  ,  TOTALCHOLESTEROL      
   , AST, ALT , GAMMAGTP , HEPATITISSCR ,BREASTRADIOGRAPHY, ECG )
		VALUES(col_seq.nextval ,#{guestNo},#{height}, #{weight}, #{fatness}, #{visionl}, #{visionr}, #{hearingl}, #{hearingr},
		 #{bloodpremax}, #{bloodpremin},#{urineglucose},#{urineprotein},#{occulthematuria},#{urineph},
		 #{hemoglobin},#{bloodglucose},#{totalcholesterol}, #{ast},#{alt},#{gammagtp},#{hepatitisscr}, #{breastradiography}, #{ecg})
	</insert>
	
	<!-- 검진서 결과 셀렉트 -->
	<select id="checkAnalyze" resultType="com.team.medical.vo.ExaminationVO">
	SELECT  g.GUESTNO,guestname, HEIGHT,WEIGHT,FATNESS ,VISIONL,VISIONR ,HEARINGL ,HEARINGR ,BLOODPREMAX , BLOODPREMIN             
    ,URINEGLUCOSE,URINEPROTEIN ,OCCULTHEMATURIA,URINEPH ,HEMOGLOBIN ,BLOODGLUCOSE  ,TOTALCHOLESTEROL      
   ,AST, ALT , GAMMAGTP , HEPATITISSCR ,BREASTRADIOGRAPHY,ECG 
   FROM Examination c , guest g WHERE c.GUESTNO = g.GUESTNO AND g.guestNo=#{guestNo}	
	</select>
	
	<!-- 예약버튼 클릭한 병원정보 셀렉트  -->
	<select id="reservehospital" resultType="com.team.medical.vo.HospitalVO">
		SELECT * FROM Hospital where hospitalno=#{hospitalno}
	</select>
	
	<!-- 예약목록 인서트 -->
	<insert id="reservePro" parameterType="com.team.medical.vo.ReservationVO">
		insert into Reservation(RESERVATIONNO ,GUESTNO , RESERVATIONTIME ,RESERVATIONKIND,HOSPITALNO, HOSPITALKIND,
								CLOCK, MINUTE, SYMPTOM ,SYMPTOMCHK)
				values(res_seq.nextval,#{guestNo},#{reservationTime},#{reservationKind},#{hospitalno}
				,#{hospitalkind},#{clock},#{minute},#{symptom},#{symptomchk})				
	
	</insert>
	
	<!-- 총 예약목록  수 -->
	<select id="reservecnt" resultType="int">
		select COUNT(*) from Reservation where guestNo = #{guestNo}
	</select>
	
	<!-- 예약목록 셀렉트 -->
	<select id="reserveList" parameterType="java.util.Map" resultType="com.team.medical.vo.ReservationVO">
	
	 
				SELECT *
				 FROM (	select hospitalname, hospitalphone, reservationTime, reservationKind ,reservationNo, clock, minute ,rownum rNum 
					 		from (select * from Reservation r ,  Hospital h  
					 		where   r.hospitalno = h.hospitalno  
					 		AND  guestNo = #{guestNo}
				 			order by RESERVATIONNO desc)
						)
			<![CDATA[		 
					WHERE rNum >= #{start} AND rNum <= #{end}
			 ]]>
	
	</select>
	
	<!-- 체크한 증상에 해당하는 질병을 셀렉트  -->
	<select id="simpleTreatPro" resultType="com.team.medical.vo.DiseaseVO">
		select * from Disease where DISEASEDIAGNOSIS like '%'||#{chk}||'%'
	
	</select>
						
	<!-- 진료과에 해당하는 병원정보 셀렉트 -->						
	<select id="simpleTreathos" resultType="com.team.medical.vo.HospitalVO">
		SELECT * FROM Hospital where HOSPITALKIND1=#{dikind} or  HOSPITALKIND2=#{dikind} or  HOSPITALKIND3=#{dikind} 
	</select>
	
	<!-- 입력한 음식에 따른 칼로리 -->
	<select id="foodsearch" resultType="com.team.medical.vo.FoodVO">
		SELECT foodcal , food  from  food  where food=#{food} and guestno=#{guestNo}
	</select>						
	
	<!-- 회원번호와 하루 총 칼로리 인서트 -->			
	<insert id="todaycal" parameterType="com.team.medical.vo.FoodVO">
		insert into food(foodno, GUESTNO, DAY, TODAYCAL ) values(food_seq.nextval, #{guestNo}, #{day}, #{todaycal})
	</insert>									
	
	
	<!-- 회원의 현재 날짜의 칼로리 등록정보 조회  -->
	<select id="mycal" parameterType="com.team.medical.vo.FoodVO" resultType="com.team.medical.vo.FoodVO"> 
		select * from food where GUESTNO=#{guestNo} and day=#{day}
	</select>
	
	<!-- 회원번호와 하루 총 칼로리 업데이트 -->	
	<update id="mycalUpdate"  parameterType="com.team.medical.vo.FoodVO">
		update food set TODAYCAL=#{todaycal}  where GUESTNO=#{guestNo} and day=#{day} 
		
	</update>
	
	<!-- 사용자가 입력한 음식과 칼로리값 인서트 -->
	<insert id="newfood" parameterType="com.team.medical.vo.FoodVO">
		insert into food(food,foodno , foodcal, foodgram,guestno) values(#{food}, food_seq.nextval,#{foodcal}, #{foodgram},#{guestNo})
	</insert>
	
	<!-- 사용자가 등록한 음식의 총 갯수  -->
	<select id="myFoodcnt" resultType="int">
		select count(*) from food where guestNo = #{guestNo} and food is not null
	</select>
	
	<!-- 사용자가 등록한 음식목록리스트 셀렉 -->
	<select id="myFoodList" parameterType="map" resultType="com.team.medical.vo.FoodVO">
		
			SELECT * 
			  FROM(
			  		SELECT foodno, food, foodcal, foodgram, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM food 
			   	   	  		  where guestNo=#{guestNo} and food is not null
			   	   	  	  ORDER BY foodno DESC
			   	   	  	  )
					)   
	<![CDATA[				
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	
	</select>
	
	<!-- 사용자가 등록한 음식 수정-->
	<update id="myFoodModi" parameterType="java.util.Map">
		update food set foodcal=#{foodcal}, foodgram=#{foodgram} where foodno=#{foodno}
	</update>
	
	<!-- 사용자가 등록한 음식 삭제-->
	<delete id="myFoodDelete">
	delete food where foodno=#{foodno}
	
	</delete>
	
	<select id="foodmodi" resultType="com.team.medical.vo.FoodVO">
	select *from food where foodno=#{foodno}
	
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
				

</mapper>