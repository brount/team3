<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.medical.persitence.CommonDAO">

	<!-- 게시글 갯수 -->
	<select id="getQuestionCnt" resultType="int">
		select count(boardno) from QuestionBoard where kind=#{kind}
	</select>
	<!-- 게시글 목록 -->
	<select id="getQuestionList" parameterType="java.util.Map" resultType="com.team.medical.vo.QuestionBoardVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT boardno, boardwriter, boardpwd, boardtitle, boardcontent,boarddate, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM QuestionBoard 
			   	   	  		  where kind=#{kind}
			   	   	  	  ORDER BY boardno DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	<!-- 글상세보기 -->
	<select id="getQuestion" resultType="com.team.medical.vo.QuestionBoardVO">
		SELECT * FROM QuestionBoard WHERE boardno = #{boardno}
	</select>
	<!-- 글수정 -->
	<update id="boardModifyPro" parameterType="com.team.medical.vo.QuestionBoardVO">
		UPDATE QuestionBoard SET boardno=#{boardno}, boardtitle=#{boardtitle}, boardcontent=#{boardcontent} WHERE boardno = #{boardno}
	</update>
	<!-- // pwdChk -->
	<select id="pwdChk" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM QuestionBoard WHERE boardno=#{boardno} AND boardpwd = #{boardpwd}
	</select>
	<!-- 글작성 -->
	<insert id="boardAddPro" parameterType="com.team.medical.vo.QuestionBoardVO">
		INSERT INTO QuestionBoard(boardno,boardwriter,boardpwd,boardtitle,boardcontent,kind) values(BOARD_SEQ.NEXTVAL,#{boardwriter},#{boardpwd},#{boardtitle},#{boardcontent},#{kind})
	</insert>
	<!-- 글 삭제 -->
	<delete id="boardDeletePro" parameterType="int">
		DELETE QuestionBoard WHERE boardno = #{boardno}
	</delete>
	<!-- 댓글 가져오기 -->
	<select id="getreList" resultType="com.team.medical.vo.QuestionBoardVO">
		<![CDATA[
			SELECT * 
			 FROM(SELECT boardno, boardwriter, boardpwd, boardtitle, boardcontent,boarddate ,kind 
					 FROM(
							SELECT * 
							FROM QuestionBoard 
							WHERE kind = #{kind} AND ref = #{ref} 
							ORDER BY boarddate )
						)    
		]]>
	</select>
	<!-- 댓글작성 -->
	<insert id="inputre" parameterType="com.team.medical.vo.QuestionBoardVO">
		INSERT INTO QuestionBoard (boardno,boardwriter,boardpwd,boardtitle,boardcontent,kind,ref) values(BOARD_SEQ.NEXTVAL,#{boardwriter},#{boardpwd},#{boardtitle},#{boardcontent},#{kind},#{ref})
	</insert>

	<!-- 닥터 아이디 -->
	<select id="eventNo" parameterType="String" resultType="int">
		SELECT doctorno FROM doctor WHERE doctorid=#{id}
	</select>
	
	<!-- 병원목록 갯수세기 -->
	<select id="getHospitalCnt" resultType="int">
		select count(hospitalno) from hospital
	</select>
	
	<!-- 병원목록 가져오기 -->	
	<select id="getHospitalList" parameterType="java.util.Map" resultType="com.team.medical.vo.HospitalVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT hospitalno, doctorno, hospitalname, hospitaladdress1, hospitaladdress2,
			  		hospitalphone,hospitalinstruction,hospitaltime,hospitalholiday,hospitalimage,
			  		hospitalstate, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM hospital 
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 이벤트 추가 -->
	<insert id="insertEvent" parameterType="com.team.medical.vo.EventVO">
		INSERT
		INTO event (advertisementNo, doctorno, advertisementTitle, advertisementThumbnail ,advertisementImage, advertisementContents,
					advertisementRegDate, advertisementKind, advertisementStart, advertisementEnd, advertisementState)
		VALUES (advertisementnoseq.nextval, #{doctorno}, #{advertisementTitle}, #{advertisementThumbnail}, #{advertisementImage}, #{advertisementContents},
				sysdate, #{advertisementKind}, #{advertisementStart}, #{advertisementEnd}, #{advertisementState})
	</insert>
	
	<!-- 이벤트 리스트 -->
	<select id="eventList" parameterType="java.util.Map" resultType="com.team.medical.vo.EventVO">
		<![CDATA[
		SELECT *
		  FROM (SELECT advertisementNo, advertisementThumbnail, advertisementTitle,
		  			   advertisementStart, advertisementEnd, rownum rNum
		         FROM (SELECT * FROM event ORDER BY advertisementEnd DESC))
		  WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 이벤트 상세보기 -->
	<select id="eventInfo" resultType="com.team.medical.vo.EventVO">
		SELECT * FROM event WHERE advertisementNo=#{advertisementNo}
	</select>
	
	<!-- 이벤트 갯수 구하기 -->
	<select id="getEventCnt" resultType="int">
		SELECT count(*) FROM event
	</select>
	
	<!-- 질병 갯수 구하기 -->
	<select id="getDiseaseCnt" resultType="int">
		SELECT count(*) FROM disease
	</select>
	
	<!-- 질병 리스트 -->
	<select id="diseaseList" parameterType="java.util.Map" resultType="com.team.medical.vo.DiseaseVO">
		<![CDATA[
		SELECT *
		  FROM (SELECT diseaseCode, diseaseName, diseaseDefine, diseaseCause, diseaseSymptom,
		  			   diseaseDiagnosis, diseaseCure, complications, prevention, rownum rNum
		         FROM (SELECT * FROM disease ORDER BY diseaseCode DESC))
		  WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 질병 상세보기 -->
	<select id="diseaseInfo" resultType="com.team.medical.vo.DiseaseVO">
		SELECT * FROM disease WHERE diseaseCode=#{diseaseCode}
	</select>
	
	<!-- 예방 갯수 구하기 -->
	<select id="getPreventionCnt" resultType="int">
		SELECT count(*) FROM prevention
	</select>
	
	<!-- 예방 리스트 -->
	<select id="preventionList" parameterType="java.util.Map" resultType="com.team.medical.vo.PreventionVO">
		<![CDATA[
		SELECT *
		  FROM (SELECT preventionCode, preventionKind, countryCode, diseasercode,
		               preventioncontent, rownum rNum
		         FROM (SELECT * FROM prevention ORDER BY preventionCode DESC))
		  WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 예방 상세보기 -->
	<select id="preventionInfo" resultType="com.team.medical.vo.PreventionVO">
		SELECT * FROM prevention WHERE preventionCode=#{preventionCode}
	</select>
</mapper>