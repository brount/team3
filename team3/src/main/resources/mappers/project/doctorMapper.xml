<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.medical.persitence.DoctorDAO">
	<select id="doctorLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM doctor WHERE doctorid=#{id} AND doctorpwd=#{pwd}
	</select>
	<select id="doctorappro" parameterType="java.util.Map" resultType="int">
		SELECT doctorappro FROM doctor WHERE doctorid=#{id} 
	</select>
	
	<!-- 아이디 체크 -->
	<select id ="idCheck" resultType="int">
		select count(*) from doctor where doctorid =#{doctorid,jdbcType=VARCHAR}
	</select>
	
	<!-- 회원가입 정보 넣기 -->
	<insert id="insertMember" parameterType="com.team.medical.vo.DoctorVO">
		insert into doctor( doctorno, hospitalno, doctorid, doctorpwd, doctorname, doctorappro, doctorphone, doctoremail, doctorregstration, doctorspecialism, point, sanctions, licence)
		values( doctornoseq.nextval ,#{hospitalno},#{doctorid},#{doctorpwd},#{doctorname},#{doctorappro},#{doctorphone},#{doctoremail},#{doctorregstration},#{doctorspecialism},#{point},#{sanctions}, #{licence,jdbcType=VARCHAR})
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id ="updateMemberInfo" parameterType="com.team.medical.vo.DoctorVO">
		update doctor set doctorpwd = #{doctorpwd}, doctorname =#{doctorname}, doctorphone =#{doctorphone}, doctoremail =#{doctoremail}, doctorspecialism =#{doctorspecialism},licence =#{licence,jdbcType=VARCHAR} where doctorid =#{doctorid,jdbcType=VARCHAR} 
	</update>
	
	<!-- 의사회원 탈퇴 -->
	<update id = "deleteMember" parameterType="com.team.medical.vo.DoctorVO">
		update doctor set doctorappro = 3 where doctorid=#{id}  
	</update>
	
	
	<!-- 의사 번호 가져오기 -->
	<select id="getdocnoInfo" parameterType="String" resultType="int">
		select doctorno from doctor where doctorid=#{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 내 병원 정보 가져오기 -->
   <select id="getMyhospitalInfo" parameterType="String" resultType="com.team.medical.vo.HospitalVO">
      select * from hospital where doctorno LIKE '%'|| #{doctorno,jdbcType=VARCHAR} ||'%'
   </select>
   
   <!-- 제휴병원 중복체크 -->
   <select id="chkHospital" parameterType="String" resultType="int">
      SELECT count(hospitalno) FROM hospital WHERE hospitalphone = #{hospitalphone}
   </select>
   <!-- 병원정보 가져오기(병원번호) -->
   <select id="getHospitalInfo" parameterType="java.util.Map" resultType="com.team.medical.vo.HospitalVO">
      select * from hospital 
      <where>
         <if test="hospitalphone != null">
            hospitalphone = #{hospitalphone}
         </if>
         <if test="hospitalno != null">
            hospitalno = #{hospitalno}
         </if>
      </where>
   </select>
    <!-- 병원정보수정 -->
   <update id="updateHospital" parameterType="com.team.medical.vo.HospitalVO">
      UPDATA hospital SET doctorno=#{doctorno},
      hospitaladdr=#{hospitaladdr},hospitalphone=#{hospitalphone},
      hospitalinstruction=#{hospitalinstruction},hospitalimage=#{hospitalimage},
      mon=#{mon},tues=#{tues}, wed=#{wed}, thurs=#{thurs}, fri=#{fri}, sat=#{sat}, sun=#{sun}, 
      holi=#{holi}, hospitalstate=#{hospitalstate}, hospitalkind=#{hospitalkind}
      WHERE hospitalno = #{hospitalno}
   </update>
	
	<!-- 의사 정보 가져오기 -->
	<select id = "getDocInfo"  resultType="com.team.medical.vo.DoctorVO">
		select * from doctor where doctorid=#{doctorid,jdbcType=VARCHAR}
	</select>
	
	<!-- 검사 의뢰서 등록 -->
	<insert id = "checkListInput" parameterType="com.team.medical.vo.CheckupListVO">
		insert into CheckupList(doctorno, checkuplist, guestNo, checkup_kind, checkup_name, checkup_opinion, checkup_contents, checkup_date)
		values(#{doctorno}, checkuplistseq.nextval, #{guestNo}, #{checkup_kind}, #{checkup_name}, #{checkup_opinion}, #{checkup_contents} ,#{checkup_date})
	</insert>
	
	<select id="getcheckupListCnt" resultType="int">
		select count(checkuplist) from CheckupList
	</select>
	
	<!-- 검사의뢰 목록 -->
	<select id="CheckupList" parameterType="java.util.Map" resultType="com.team.medical.vo.CheckupListVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT doctorno, checkuplist, guestno, checkup_kind, checkup_name, checkup_opinion, checkup_contents, checkup_date, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM CheckupList 
			   	   	  		    ORDER BY checkuplist DESC 
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 의사 번호로 정보가져오기 -->
	<select id = "getDoctorInfo" parameterType="int" resultType="com.team.medical.vo.DoctorVO">
		select * from doctor where doctorno=#{doctorno,jdbcType=INTEGER}
	</select>
		
	<!-- 일반회원 정보 -->
	<select id = "getcusInfo" parameterType="int" resultType="com.team.medical.vo.GuestVO">
	   select * from guest where guestno =#{guestno,jdbcType=INTEGER}
	</select>
	
	<!-- 검사의뢰 의사번호 -->
	<select id = "checkupdoc" resultType="int">
	   select doctorno from CheckupList where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<!-- 검사의뢰 정보 -->
	<select id = "getCheckupInfo" parameterType="int" resultType="com.team.medical.vo.CheckupListVO">
	   select * from CheckupList where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<!-- 검사 번호 -->
	<select id="getCheckupListno"  resultType="int">
	 	select checkuplist from
	 	(select checkuplist, rnum from
	 	(select checkuplist, rownum rnum from checkuplist order by checkuplist desc)
	 	where rnum = 1)
	</select>
	
	<select id = "getcusnoInfo" resultType="int">
		select guestno from checkuplist where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<insert id = "checkupAdd" parameterType="com.team.medical.vo.CheckupVO">
		insert into Checkup (checkup, guestNo, checkuplist)
		values(checkupseq.nextval, #{guestNo,jdbcType=INTEGER}, #{checkuplist,jdbcType=INTEGER} )
	</insert>
	
	<select id="getCheckupResultListCnt" resultType="int">
		select count(checkup) from checkup
	</select>
	
	<select id="getCheckupResultList" parameterType="java.util.Map" resultType="com.team.medical.vo.CheckupVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT checkup, guestNo, height ,weight, fatness, visionl, visionr, hearingl,hearingr, bloodpremax, bloodpremin, urineglucose, urineprotein, occulthematuria, urineph, hemoglobin, bloodglucose, totalcholesterol, ast, alt, gammagtp, hepatitisscr, breastradiography, ecg, checkup_date, checkuplist, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM Checkup 
			   	   	  		    ORDER BY Checkup DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<select id = "getCheckupResultInfo" parameterType="int" resultType="com.team.medical.vo.CheckupVO">
	   select * from Checkup where checkup =#{checkup,jdbcType=INTEGER}
	</select>
	
	<select id = "getGuestCheckupResult" resultType="int">
	   select guestno from Checkup where checkup =#{checkup,jdbcType=INTEGER}
	</select>
	
	<!-- 삭제예정 -->
	<select id = "getCheckupGuestno" resultType="int">
	   select * from checkup where guestno =#{guestno,jdbcType=INTEGER}
	</select>
	
	
	
	<!--  -->
	<select id = "getDoctonoCheckupResult" resultType="int">
	   select doctorno from CheckupList where guestno =#{guestno,jdbcType=INTEGER}
	</select>
	
	<select id = "getHospitalnoDocno" resultType="int">
	   select hospitalno from hospital where doctorno =#{doctorno,jdbcType=VARCHAR}
	</select>
	
	<insert id = "examinationAdd" parameterType="com.team.medical.vo.PrescriptionVO">
		insert into prescription(prescriptionNo, hospitalno, guestno, symptom, drugname, drugdosage, drugrepeat, dosagedate, dosageusage, injectionname, injectiondosage, injectionrepeat, injectiondate, caution, prescriptionDate)
		values(prescriptionNo_seq.nextval,#{hospitalno},#{guestno},#{symptom,jdbcType=VARCHAR},#{drugname},#{drugdosage,jdbcType=VARCHAR},#{drugrepeat,jdbcType=VARCHAR},#{dosagedate},#{dosageusage,jdbcType=VARCHAR},#{injectionname,jdbcType=VARCHAR},#{injectiondosage,jdbcType=VARCHAR},#{injectionrepeat,jdbcType=VARCHAR},#{injectiondate,jdbcType=VARCHAR},#{caution,jdbcType=VARCHAR},#{prescriptionDate})
	</insert>
	
	<!-- 처방전 글 갯수 -->
	<select id="examinationListCnt" resultType="int">
		select count(prescriptionNo) from Prescription
	</select>
	
	<!-- 처방전 목록 -->
	<select id="getExaminationList" parameterType="java.util.Map" resultType="com.team.medical.vo.PrescriptionVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT prescriptionNo, hospitalno, guestno, symptom, drugname, drugdosage, drugrepeat, dosagedate, dosageusage, injectionname, injectiondosage, injectionrepeat, injectiondate, caution, prescriptionDate, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM Prescription 
			   	   	  		    ORDER BY prescriptionNo DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start,jdbcType=INTEGER} AND rnum <= #{end,jdbcType=INTEGER}
		]]>
	</select>
	
	<select id = "getPrescriptionNoGuestno" resultType="int">
	   select guestno from Prescription where prescriptionNo =#{prescriptionNo,jdbcType=INTEGER}
	</select>
	
	<select id = "getPrescription" parameterType="int" resultType="com.team.medical.vo.PrescriptionVO">
		select * from Prescription where prescriptionNo=#{prescriptionNo,jdbcType=INTEGER}
	</select>
	
	<!-- 예약 글 갯수 -->
	<select id="getPatientListCnt" resultType="int">
		select count(reservationNo) from Reservation
	</select>
	
	<!-- 예약 글 목록 -->
	<select id="getpatientList" parameterType="java.util.Map" resultType="com.team.medical.vo.ReservationVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT hospitalno, doctorNo, reservationNo, guestNo, reservationTime, reservationKind, hospitalkind, clock, minute, symptom, symptomchk, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM Reservation 
			   	   	  		    ORDER BY reservationNo DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 예약병원정보 -->
	<select id = "getHospitalNoInfo" parameterType="int" resultType="com.team.medical.vo.HospitalVO">
	   select * from hospital where hospitalno =#{hospitalno,jdbcType=INTEGER}
	</select>
	
	<select id = "reservationNoguestno" resultType="int">
	   select guestno from reservation where reservationNo =#{reservationNo,jdbcType=INTEGER}
	</select>
	
	<!-- 예약정보 -->
	<select id = "reservationInfo" parameterType="int" resultType="com.team.medical.vo.ReservationVO">
	   select * from Reservation where reservationNo =#{reservationNo,jdbcType=INTEGER}
	</select>
	<select id = "doctornoGuestno" resultType="int">
	   select doctorno from CheckupList where CheckupList =#{CheckupList,jdbcType=INTEGER}
	</select>
	
	<select id = "getCheckupListGuestno" resultType="int">
	   select CheckupList from CheckupList where guestno =#{guestno,jdbcType=INTEGER}
	</select>
	
	<update id = "checkupUpdate" parameterType="com.team.medical.vo.CheckupVO">
		update Checkup 
		<set> 
			<if test="height!=null">height = #{height},</if>
			<if test="weight!=null">weight = #{weight},</if>
			<if test="fatness!=null">fatness = #{fatness},</if>
			<if test="visionl!=null">visionl = #{visionl},</if>
			<if test="visionr!=null">visionr = #{visionr},</if>
			<if test="hearingl!=null">hearingl = #{hearingl},</if>
			<if test="hearingr!=null">hearingr = #{hearingr},</if>
			<if test="bloodpremax!=null">bloodpremax = #{bloodpremax},</if>
			<if test="bloodpremin!=null">bloodpremin = #{bloodpremin},</if>
			<if test="urineglucose!=null">urineglucose = #{urineglucose},</if>
			<if test="urineprotein!=null">urineprotein = #{urineprotein},</if>
			<if test="occulthematuria!=null">occulthematuria = #{occulthematuria},</if>
			<if test="urineph!=null">urineph = #{urineph},</if>
			<if test="hemoglobin!=null">hemoglobin = #{hemoglobin},</if>
			<if test="bloodglucose!=null">bloodglucose = #{bloodglucose},</if>
			<if test="totalcholesterol!=null">totalcholesterol = #{totalcholesterol},</if>
			<if test="ast!=null">ast = #{ast},</if>
			<if test="alt!=null">alt = #{alt},</if>
			<if test="gammagtp!=null">gammagtp = #{gammagtp},</if>
			<if test="hepatitisscr!=null">hepatitisscr = #{hepatitisscr},</if>
			<if test="breastradiography!=null">breastradiography = #{breastradiography},</if>
			<if test="ecg!=null">ecg = #{ecg}</if>
			
		</set>
		where checkup = #{checkup}
	</update>
	
	<select id = "getCheckupCheckupList" parameterType="int" resultType="int">
	   select checkup from checkup where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<select id = "getCheckupListCheckup" parameterType="int" resultType="int">
	   select checkuplist from checkup where checkup =#{checkup,jdbcType=INTEGER}
	</select>
	
	<select id = "aaa" parameterType="int" resultType="com.team.medical.vo.PrescriptionVO">
		select * from Prescription where prescriptionNo =#{prescriptionNo}
	</select>
	
	<!-- 포인트 글 갯수 -->
	<select id="getPointManageCnt" resultType="int">
		select count(pointno) from point
	</select>
	
	<!-- 포인트 글 목록 -->
	<select id="getPointManageList" parameterType="java.util.Map" resultType="com.team.medical.vo.PointVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT pointno, doctorNo, point, status, cum_date, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM point 
			   	   	  		    ORDER BY pointNo DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
</mapper>