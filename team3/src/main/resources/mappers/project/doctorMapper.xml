<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.medical.persitence.DoctorDAO">
	<select id="doctorLogin" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM doctor WHERE doctorid=#{id} AND doctorpwd=#{pwd}
	</select>
	<!-- 아이디 체크 -->
	<select id ="idCheck" resultType="int">
		select count(*) from doctor where doctorid =#{doctorid,jdbcType=VARCHAR}
	</select>
	
	<!-- 회원가입 정보 넣기 -->
	<insert id="insertMember" parameterType="com.team.medical.vo.DoctorVO">
		insert into doctor( doctorno, hospitalno, doctorid, doctorpwd, doctorname, doctorappro, doctorphone, doctoremail, doctorregstration, doctorspecialism, point, sanctions, licence)
		values( doctornoseq.nextval ,#{hospitalno},#{doctorid},#{doctorpwd},#{doctorname},#{doctorappro},#{doctorphone},#{doctoremail},#{doctorregstration},#{doctorspecialism},#{point},#{sanctions}, #{licence,jdbcType=VARCHAR})
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id ="updateMemberInfo" parameterType="com.team.medical.vo.DoctorVO">
		update doctor set doctorpwd = #{doctorpwd}, doctorname =#{doctorname}, doctorphone =#{doctorphone}, doctoremail =#{doctoremail}, doctorspecialism =#{doctorspecialism},licence =#{licence,jdbcType=VARCHAR} where doctorid =#{doctorid,jdbcType=VARCHAR} 
	</update>
	
	<!-- 의사회원 탈퇴 -->
	<delete id = "deleteMember" parameterType="String">
		delete from doctor where doctorid=#{id}
	</delete>
	
	<!-- 내 병원 정보 입력 -->
	<insert id="insertHospitalInfo" parameterType="com.team.medical.vo.HospitalVO">
		insert into Hospital(hospitalno, doctorno, hospitalname, hospitaladdress1, hospitaladdress2, hospitaladdress3, hospitalphone, hospitalinstruction, hospitaltime, hospitalholiday, hospitalimage)
		values( hospitalseq.nextval ,#{doctorno},#{hospitalname},#{hospitaladdress1,jdbcType=VARCHAR},#{hospitaladdress2,jdbcType=VARCHAR},#{hospitaladdress3,jdbcType=VARCHAR},#{hospitalphone,jdbcType=VARCHAR},#{hospitalinstruction,jdbcType=VARCHAR},#{hospitaltime},#{hospitalholiday,jdbcType=VARCHAR},#{hospitalimage,jdbcType=VARCHAR})
	</insert>
	
	<!-- 의사 번호 가져오기 -->
	<select id="getdocnoInfo" parameterType="String" resultType="int">
		select doctorno from doctor where doctorid=#{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 내 병원 정보 가져오기 -->
   <select id="getMyhospitalInfo" parameterType="String" resultType="com.team.medical.vo.HospitalVO">
      select * from hospital where doctorno LIKE '%'|| #{doctorno} ||'%'
   </select>
   
   <!-- 제휴병원 중복체크 -->
   <select id="chkHospital" parameterType="String" resultType="int">
      SELECT count(hospitalno) FROM hospital WHERE hospitalphone = #{hospitalphone}
   </select>
   <!-- 병원정보 가져오기(병원번호) -->
   <select id="getHospitalInfo" parameterType="String" resultType="com.team.medical.vo.HospitalVO">
      select * from hospital where hospitalphone = #{hospitalphone}
   </select>
   <select id="getHpInfo" parameterType="String" resultType="com.team.medical.vo.HpVO">
      select * from hp where hospitalphone = #{hospitalphone}
   </select>
   <!-- 병원정보수정 -->
   <update id="updateHospital" parameterType="com.team.medical.vo.HospitalVO">
      UPDATA hospital SET doctorno=#{doctorno},hospitalname=#{hospitalname},
      hospitaladdress1=#{hospitaladdress1},hospitaladdress2=#{hospitaladdress2},
      hospitaladdress3=#{hospitaladdress3},hospitalphone=#{hospitalphone},
      hospitalinstruction=#{hospitalinstruction},hospitaltime=#{hospitaltime},
      hospitalholiday=#{hospitalholiday},hospitalimage=#{hospitalimage}
      WHERE hospitalno = #{hospitalno}
   </update>
	
	<!-- 의사 정보 가져오기 -->
	<select id = "getDocInfo"  resultType="com.team.medical.vo.DoctorVO">
		select * from doctor where doctorid=#{doctorid,jdbcType=VARCHAR}
	</select>
	
	<!-- 검사 의뢰서 등록 -->
	<insert id = "checkListInput" parameterType="com.team.medical.vo.CheckupListVO">
		insert into CheckupList(doctorno, checkuplist, guestno, checkup_kind, checkup_name, checkup_opinion, checkup_contents, checkup_date)
		values(#{doctorno}, checkuplistseq.nextval, guestno.nextval, #{checkup_kind}, #{checkup_name}, #{checkup_opinion}, #{checkup_contents} ,#{checkup_date})
	</insert>
	
	<select id="getcheckupListCnt" resultType="int">
		select count(checkuplist) from CheckupList
	</select>
	
	<!-- 검사의뢰 목록 -->
	<select id="CheckupList" parameterType="java.util.Map" resultType="com.team.medical.vo.CheckupListVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT doctorno, checkuplist, guestno, checkup_kind, checkup_name, checkup_opinion, checkup_contents, checkup_date, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM CheckupList 
			   	   	  		    ORDER BY checkuplist DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 의사 번호로 정보가져오기 -->
	<select id = "getDoctorInfo" parameterType="int" resultType="com.team.medical.vo.DoctorVO">
		select * from doctor where doctorno=#{doctorno,jdbcType=INTEGER}
	</select>
		
	<!-- 일반회원 정보 -->
	<select id = "getcusInfo" parameterType="int" resultType="com.team.medical.vo.GuestVO">
	   select * from guest where guestno =#{guestno,jdbcType=INTEGER}
	</select>
	
	<!-- 검사의뢰 의사번호 -->
	<select id = "checkupdoc" resultType="int">
	   select doctorno from CheckupList where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<select id = "getCheckupInfo" parameterType="int" resultType="com.team.medical.vo.CheckupListVO">
	   select * from CheckupList where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<select id = "getcusnoInfo" resultType="int">
		select guestno from checkuplist where checkuplist =#{checkuplist,jdbcType=INTEGER}
	</select>
	
	<insert id = "checkupAdd" parameterType="com.team.medical.vo.CheckupVO">
		insert into Checkup (checkup, guestNo, height ,weight, fatness, visionl, visionr, hearingl,hearingr, bloodpremax, bloodpremin, urineglucose, urineprotein, occulthematuria, urineph, hemoglobin, bloodglucose, totalcholesterol, ast, alt, gammagtp, hepatitisscr, breastradiography, ecg, checkup_date)
		values(checkupseq.nextval, #{guestNo,jdbcType=INTEGER}, #{height,jdbcType=VARCHAR}, #{weight,jdbcType=VARCHAR}, #{fatness,jdbcType=VARCHAR}, #{visionl,jdbcType=VARCHAR}, #{visionr,jdbcType=VARCHAR}, #{hearingl,jdbcType=VARCHAR}, #{hearingr,jdbcType=VARCHAR}, #{bloodpremax,jdbcType=VARCHAR}, #{bloodpremin,jdbcType=VARCHAR}, #{urineglucose,jdbcType=VARCHAR}, #{urineprotein,jdbcType=VARCHAR}, #{occulthematuria,jdbcType=VARCHAR}, #{urineph,jdbcType=VARCHAR}, #{hemoglobin,jdbcType=VARCHAR}, #{bloodglucose,jdbcType=VARCHAR}, #{totalcholesterol,jdbcType=VARCHAR}, #{ast,jdbcType=VARCHAR}, #{alt,jdbcType=VARCHAR}, #{gammagtp,jdbcType=VARCHAR}, #{hepatitisscr,jdbcType=VARCHAR}, #{breastradiography,jdbcType=VARCHAR}, #{ecg,jdbcType=VARCHAR}, #{checkup_date} )
	</insert>
	
	<select id="getCheckupResultListCnt" resultType="int">
		select count(checkup) from checkup
	</select>
	
	<select id="getCheckupResultList" parameterType="java.util.Map" resultType="com.team.medical.vo.CheckupVO">
		<![CDATA[
			SELECT * 
			  FROM(
			  		SELECT checkup, guestNo, height ,weight, fatness, visionl, visionr, hearingl,hearingr, bloodpremax, bloodpremin, urineglucose, urineprotein, occulthematuria, urineph, hemoglobin, bloodglucose, totalcholesterol, ast, alt, gammagtp, hepatitisscr, breastradiography, ecg, checkup_date, rownum rnum
			   	   	  FROM(
			   	   	  		SELECT * 
			   	   	  		  FROM Checkup 
			   	   	  		    ORDER BY Checkup DESC
			   	   	  	  )
					)   
			 WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<select id = "getCheckupResultInfo" parameterType="int" resultType="com.team.medical.vo.CheckupVO">
	   select * from Checkup where checkup =#{checkup,jdbcType=INTEGER}
	</select>
	
</mapper>